#=============================================================================
# This file is automatically generated by Ardco.
# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
#=============================================================================
set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR arm)

{{#if recipe_c_o_argv_cmd}}
set(CMAKE_C_COMPILER "{{recipe_c_o_argv_cmd}}" CACHE PATH "gcc" FORCE)
{{/if}}
{{#if recipe_cpp_o_argv_cmd}}
set(CMAKE_CXX_COMPILER "{{recipe_cpp_o_argv_cmd}}" CACHE PATH "g++" FORCE)
{{/if}}
{{#if recipe_ASM_o_argv_cmd}}
set(CMAKE_ASM_COMPILER "{{recipe_ASM_o_argv_cmd}}" CACHE PATH "g++" FORCE)
{{/if}}
{{#if recipe_ar_argv_cmd}}
set(CMAKE_AR "{{recipe_ar_argv_cmd}}" CACHE PATH "archive" FORCE)
{{/if}}
{{#if recipe_c_combine_argv_cmd}}
set(CMAKE_LINKER "{{recipe_c_combine_argv_cmd}}" CACHE PATH "linker" FORCE)
{{/if}}
{{#if recipe_c_nm_argv_cmd}}
set(CMAKE_NM "{{recipe_c_nm_argv_cmd}}" CACHE PATH "nm" FORCE)
{{/if}}
{{#if recipe_objcopy_eep_argv_cmd}}
set(CMAKE_OBJCOPY "{{recipe_objcopy_eep_argv_cmd}}" CACHE PATH "objcopy" FORCE)
{{/if}}
{{!
set(CMAKE_OBJDUMP "${TOOLCHAIN_ROOT}/bin/${TRIPLE}-objdump${TOOL_OS_SUFFIX}" CACHE PATH "objdump" FORCE)
set(CMAKE_STRIP "${TOOLCHAIN_ROOT}/bin/${TRIPLE}-strip${TOOL_OS_SUFFIX}" CACHE PATH "strip" FORCE)
set(CMAKE_RANLIB "${TOOLCHAIN_ROOT}/bin/${TRIPLE}-ranlib${TOOL_OS_SUFFIX}" CACHE PATH "ranlib" FORCE)
}}

#=============================================================================
# Build Information
#=============================================================================
set(BUILD_PATH ${CMAKE_BINARY_DIR})

#=============================================================================
#                              C Flags
#=============================================================================
function(get_arduino_c_flags COMPILE_FLAGS_VAR)
set(${COMPILE_FLAGS_VAR} "{{recipe_c_o_argv_flags}}" PARENT_SCOPE)
endfunction()

if (NOT DEFINED ARDUINO_C_FLAGS)
set(ARDUINO_C_FLAGS "{{recipe_c_o_argv_flags}}")
endif (NOT DEFINED ARDUINO_C_FLAGS)
set(CMAKE_C_FLAGS                "${ARDUINO_C_FLAGS}" CACHE STRING "")
set(CMAKE_C_FLAGS_DEBUG          "${ARDUINO_C_FLAGS}" CACHE STRING "")
set(CMAKE_C_FLAGS_MINSIZEREL     "${ARDUINO_C_FLAGS}" CACHE STRING "")
set(CMAKE_C_FLAGS_RELEASE        "${ARDUINO_C_FLAGS}" CACHE STRING "")
set(CMAKE_C_FLAGS_RELWITHDEBINFO "${ARDUINO_C_FLAGS}" CACHE STRING "")

#=============================================================================
#                             C++ Flags
#=============================================================================
function(get_arduino_cxx_flags COMPILE_FLAGS_VAR)
set(${COMPILE_FLAGS_VAR} "{{recipe_cpp_o_argv_flags}}" PARENT_SCOPE)
endfunction()

if (NOT DEFINED ARDUINO_CXX_FLAGS)
set(ARDUINO_CXX_FLAGS "{{recipe_cpp_o_argv_flags}}")
endif (NOT DEFINED ARDUINO_CXX_FLAGS)
set(CMAKE_CXX_FLAGS                "${ARDUINO_CXX_FLAGS}" CACHE STRING "")
set(CMAKE_CXX_FLAGS_DEBUG          "${ARDUINO_CXX_FLAGS}" CACHE STRING "")
set(CMAKE_CXX_FLAGS_MINSIZEREL     "${ARDUINO_CXX_FLAGS}" CACHE STRING "")
set(CMAKE_CXX_FLAGS_RELEASE        "${ARDUINO_CXX_FLAGS}" CACHE STRING "")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${ARDUINO_CXX_FLAGS}" CACHE STRING "")

#=============================================================================
#                              ASM Flags
#=============================================================================
function(get_arduino_asm_flags COMPILE_FLAGS_VAR)
set(${COMPILE_FLAGS_VAR} "{{recipe_S_o_argv_flags}}" PARENT_SCOPE)
endfunction()

if (NOT DEFINED ARDUINO_ASM_FLAGS)
set(ARDUINO_ASM_FLAGS "{{recipe_S_o_argv_flags}}")
endif (NOT DEFINED ARDUINO_ASM_FLAGS)
set(CMAKE_ASM_FLAGS                "${ARDUINO_ASM_FLAGS}" CACHE STRING "")
set(CMAKE_ASM_FLAGS_DEBUG          "${ARDUINO_ASM_FLAGS}" CACHE STRING "")
set(CMAKE_ASM_FLAGS_MINSIZEREL     "${ARDUINO_ASM_FLAGS}" CACHE STRING "")
set(CMAKE_ASM_FLAGS_RELEASE        "${ARDUINO_ASM_FLAGS}" CACHE STRING "")
set(CMAKE_ASM_FLAGS_RELWITHDEBINFO "${ARDUINO_ASM_FLAGS}" CACHE STRING "")

#=============================================================================
#                             Linker Flags
#=============================================================================
function(get_arduino_linker_flags LINKER_FLAGS_VAR)
set(${LINKER_FLAGS_VAR} "{{recipe_c_combine_argv_flags}}" PARENT_SCOPE)
endfunction()

#=============================================================================
#                             Other Flags
#=============================================================================
{{! IMPORTANT - DO NOT USE QUOTATION }}
set(ARDUINO_OBJCOPY_EEP_FLAGS {{recipe_objcopy_eep_argv_flags}})
set(ARDUINO_OBJCOPY_HEX_FLAGS {{recipe_objcopy_hex_argv_flags}})


# Do not pass flags like '-ffunction-sections -fdata-sections' to the linker_
# This causes undefined symbol errors when linking.
set(CMAKE_CXX_LINK_EXECUTABLE "<CMAKE_C_COMPILER> <LINK_FLAGS> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>" CACHE STRING "Linker command line" FORCE)

#=============================================================================
# Board Variables
#=============================================================================
set(BOARD "{{board}}")
set(BOARD_ID "${BOARD}")
set(BOARD_PLATFORM "{{target_platform}}")
set(BOARD_PACKAGE "{{target_package}}")

set(BOARD_CORE_PATH "{{build_core_path}}")
set(BOARD_VARIANT_PATH "{{build_variant_path}}")
set(BOARD_SYSTEM_PATH "{{build_system_path}}")

#=============================================================================
# Upload Variables
#=============================================================================
{{#if serial_port}}
set(SERIAL_PORT "{{serial_port_file}}")
set(SERIAL_PORT_PATH "{{serial_port_path}}")
{{else}}
# set(SERIAL_PORT "")
# set(SERIAL_PORT_PATH "")
{{/if}}

#=============================================================================
# Runtime Variables
#=============================================================================
set(ARDUINO_SDK_PATH {{runtime_ide_path}})
set(ARDUINO_SKETCH_PATH {{runtime_sketch_path}})
set(RUNTIME_PLATFORM_PATH {{runtime_platform_path}})

#=============================================================================
# Upload Tools Variables
#=============================================================================
set(ARDUINO_UPLOAD_PROGRAM "{{tool_upload_argv_cmd}}")

function(get_arduino_upload_flags UPLOAD_FLAGS_VAR TARGET_NAME)
  set(BUILD_PROJECT_NAME ${TARGET_NAME})
  set(${UPLOAD_FLAGS_VAR} {{tool_upload_argv_flags}} PARENT_SCOPE)
endfunction()
